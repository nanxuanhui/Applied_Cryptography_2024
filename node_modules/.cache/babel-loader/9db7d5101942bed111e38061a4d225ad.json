{"remainingRequest":"/Users/nanxuan/Desktop/vue-frontend/node_modules/babel-loader/lib/index.js!/Users/nanxuan/Desktop/vue-frontend/node_modules/eslint-loader/index.js??ref--13-0!/Users/nanxuan/Desktop/vue-frontend/src/assets/AES.js","dependencies":[{"path":"/Users/nanxuan/Desktop/vue-frontend/src/assets/AES.js","mtime":1710256297000},{"path":"/Users/nanxuan/Desktop/vue-frontend/node_modules/cache-loader/dist/cjs.js","mtime":1712020702053},{"path":"/Users/nanxuan/Desktop/vue-frontend/node_modules/babel-loader/lib/index.js","mtime":1712020702448},{"path":"/Users/nanxuan/Desktop/vue-frontend/node_modules/eslint-loader/index.js","mtime":1712020702117}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF90eXBlb2YgZnJvbSAiL1VzZXJzL25hbnh1YW4vRGVza3RvcC92dWUtZnJvbnRlbmQvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL3R5cGVvZiI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmcuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAudG8tc3RyaW5nLmpzIjsKaW1wb3J0IENyeXB0b0pTIGZyb20gJ2NyeXB0by1qcyc7Ci8qKg0KICog6L2s5o2i5Li65a2X56ym5LiyDQogKiBAcGFyYW0geyp9IGRhdGEgDQogKiBAcmV0dXJuIHtTdHJpbmd9DQogKi8KCmZ1bmN0aW9uIHBhcnNlVG9TdHJpbmcoZGF0YSkgewogIHZhciBkID0gJyc7CgogIHN3aXRjaCAoX3R5cGVvZihkYXRhKSkgewogICAgY2FzZSAnc3RyaW5nJzoKICAgICAgZCA9IGRhdGE7CiAgICAgIGJyZWFrOwoKICAgIGNhc2UgJ29iamVjdCc6CiAgICAgIGQgPSBKU09OLnN0cmluZ2lmeShkYXRhKTsKICAgICAgYnJlYWs7CgogICAgZGVmYXVsdDoKICAgICAgZCA9IGRhdGEudG9TdHJpbmcoKTsKICB9CgogIHJldHVybiBkOwp9Ci8qKg0KICog55Sf5oiQ5oyH5a6a5L2N5pWw5a2X56ymDQogKiBAcGFyYW0gbGVuZ3RoDQogKiBAcmV0dXJuIHtTdHJpbmd9IOi/lOWbnueUn+aIkOeahOaMh+WumuS9jeaVsOWtl+espg0KICovCgoKZnVuY3Rpb24gY3JlYXRlU3RyaW5nKGxlbmd0aCkgewogIHZhciBleHBlY3QgPSBsZW5ndGg7CiAgdmFyIHN0ciA9IE1hdGgucmFuZG9tKCkudG9TdHJpbmcoMzYpLnN1YnN0cigyKTsKCiAgd2hpbGUgKHN0ci5sZW5ndGggPCBleHBlY3QpIHsKICAgIHN0ciArPSBNYXRoLnJhbmRvbSgpLnRvU3RyaW5nKDM2KS5zdWJzdHIoMik7CiAgfQoKICBzdHIgPSBzdHIuc3Vic3RyKDAsIGxlbmd0aCk7CiAgcmV0dXJuIHN0cjsKfQovKioNCiAqIOeUn+aIkCBBRVNLRVkNCiAqIEByZXR1cm4ge1N0cmluZ30g6L+U5Zue55Sf5oiQ55qEIDEyOOS9jSBBRVNLRVkgMWJ5dGUgPSA4Yml0cyDov5nph4wxMjjkvY3lrp7pmYXkuZ/mmK8xNuS4quWtl+iKgg0KICovCgoKZnVuY3Rpb24gY3JlYXRlQWVzS2V5KCkgewogIHJldHVybiBjcmVhdGVTdHJpbmcoMTYpOwp9Ci8qKg0KICog55Sf5oiQIEFFUyDlkJHph49pdg0KICogQHJldHVybiB7U3RyaW5nfSDov5Tlm57nlJ/miJDnmoQgMTbkvY0gQUVTIElWDQogKi8KCgpmdW5jdGlvbiBjcmVhdGVBZXNJdigpIHsKICByZXR1cm4gY3JlYXRlU3RyaW5nKDE2KTsKfQovKioNCiAqIEFFUyDliqDlr4YNCiAqIG1vZGU6IENCQyAodGhlIGRlZmF1bHQpDQogKiBwYWRkaW5nOiBQa2NzNw0KICogQHBhcmFtIGRhdGEg5b6F5Yqg5a+G5a2X5q61DQogKiBAcGFyYW0gYWVzS2V5IOWKoOWvhiBrZXkNCiAqIEBwYXJhbSBpdiDlkJHph48NCiAqIEByZXR1cm4ge1N0cmluZ30g6L+U5Zue5Yqg5a+G5a2X5q61DQogKi8KCgpmdW5jdGlvbiBlbmNyeXB0QUVTKGRhdGEsIGFlc0tleSwgaXYpIHsKICBkYXRhID0gQ3J5cHRvSlMuZW5jLlV0ZjgucGFyc2UocGFyc2VUb1N0cmluZyhkYXRhKSk7IC8vIENyeXB0b0pT5Y+v5Lul5LuOQmFzZTY044CBTGF0aW4x5oiWSGV4562J57yW56CB5qC85byP6L2s5o2i5Li6V29yZEFycmF55a+56LGh77yM5Y+N5LmL5Lqm54S2CgogIGFlc0tleSA9IENyeXB0b0pTLmVuYy5CYXNlNjQucGFyc2UoYWVzS2V5KTsgLy9AYnVnZml4ZWQ6IGl25ZCR6YeP55qE6Kej5p6Q5pS55Li6VXRmOO+8jOS/ruWkjeWQjuerr+ino+WvhuWQjuS5seeggeeahOmXrumimC4uLgoKICBpdiA9IENyeXB0b0pTLmVuYy5VdGY4LnBhcnNlKGl2KTsKICB2YXIgZW5jcnlwdGVkID0gQ3J5cHRvSlMuQUVTLmVuY3J5cHQoZGF0YSwgYWVzS2V5LCB7CiAgICBpdjogaXYKICB9KTsKICByZXR1cm4gZW5jcnlwdGVkLnRvU3RyaW5nKCk7Cn0KLyoqDQogKiBBRVMg6Kej5a+GDQogKiBtb2RlOiBDQkMgKHRoZSBkZWZhdWx0KQ0KICogQHBhcmFtIGRhdGEg5b6F6Kej5a+G5pWw5o2uDQogKiBAcGFyYW0gYWVzS2V5IOino+WvhiBrZXkNCiAqIEBwYXJhbSBpdiDlkJHph48NCiAqIEByZXR1cm4ge1N0cmluZ30g6L+U5Zue6Kej5a+G5a2X56ym5LiyDQogKi8KCgpmdW5jdGlvbiBkZWNyeXB0QUVTKGRhdGEsIGFlc0tleSwgaXYpIHsKICAvLyBkYXRhID0gQ3J5cHRvSlMuZW5jLlV0ZjgucGFyc2UoZGF0YSk7CiAgYWVzS2V5ID0gQ3J5cHRvSlMuZW5jLkJhc2U2NC5wYXJzZShhZXNLZXkpOwogIGl2ID0gQ3J5cHRvSlMuZW5jLlV0ZjgucGFyc2UoaXYpOwogIHZhciBkZWNyeXB0ID0gQ3J5cHRvSlMuQUVTLmRlY3J5cHQoZGF0YSwgYWVzS2V5LCB7CiAgICBpdjogaXYKICB9KTsKICByZXR1cm4gQ3J5cHRvSlMuZW5jLlV0Zjguc3RyaW5naWZ5KGRlY3J5cHQpLnRvU3RyaW5nKCk7Cn0KCmV4cG9ydCBkZWZhdWx0IHsKICBwYXJzZVRvU3RyaW5nOiBwYXJzZVRvU3RyaW5nLAogIGNyZWF0ZUFlc0l2OiBjcmVhdGVBZXNJdiwKICBjcmVhdGVBZXNLZXk6IGNyZWF0ZUFlc0tleSwKICBlbmNyeXB0QUVTOiBlbmNyeXB0QUVTLAogIGRlY3J5cHRBRVM6IGRlY3J5cHRBRVMKfTs="},{"version":3,"sources":["/Users/nanxuan/Desktop/vue-frontend/src/assets/AES.js"],"names":["CryptoJS","parseToString","data","d","JSON","stringify","toString","createString","length","expect","str","Math","random","substr","createAesKey","createAesIv","encryptAES","aesKey","iv","enc","Utf8","parse","Base64","encrypted","AES","encrypt","decryptAES","decrypt"],"mappings":"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","sourcesContent":["import CryptoJS from 'crypto-js';\r\n\r\n/**\r\n * 转换为字符串\r\n * @param {*} data \r\n * @return {String}\r\n */\r\nfunction parseToString(data) {\r\n\tvar d = '';\r\n\tswitch (typeof data) {\r\n\t\tcase 'string':\r\n\t\t\td = data;\r\n\t\t\tbreak;\r\n\t\tcase 'object':\r\n\t\t\td = JSON.stringify(data);\r\n\t\t\tbreak;\r\n\t\tdefault:\r\n\t\t\td = data.toString();\r\n\t}\r\n\treturn d;\r\n}\r\n/**\r\n * 生成指定位数字符\r\n * @param length\r\n * @return {String} 返回生成的指定位数字符\r\n */\r\nfunction createString(length) {\r\n\tvar expect = length;\r\n\tvar str = Math.random().toString(36).substr(2);\r\n\twhile (str.length < expect) {\r\n\t\tstr += Math.random().toString(36).substr(2);\r\n\t}\r\n\tstr = str.substr(0, length);\r\n\treturn str;\r\n}\r\n/**\r\n * 生成 AESKEY\r\n * @return {String} 返回生成的 128位 AESKEY 1byte = 8bits 这里128位实际也是16个字节\r\n */\r\nfunction createAesKey() {\r\n\treturn createString(16);\r\n}\r\n\r\n/**\r\n * 生成 AES 向量iv\r\n * @return {String} 返回生成的 16位 AES IV\r\n */\r\nfunction createAesIv() {\r\n\treturn createString(16);\r\n}\r\n\r\n/**\r\n * AES 加密\r\n * mode: CBC (the default)\r\n * padding: Pkcs7\r\n * @param data 待加密字段\r\n * @param aesKey 加密 key\r\n * @param iv 向量\r\n * @return {String} 返回加密字段\r\n */\r\nfunction encryptAES(data, aesKey, iv) {\r\n\tdata = CryptoJS.enc.Utf8.parse(parseToString(data));\r\n\t// CryptoJS可以从Base64、Latin1或Hex等编码格式转换为WordArray对象，反之亦然\r\n\taesKey = CryptoJS.enc.Base64.parse(aesKey);\r\n\t//@bugfixed: iv向量的解析改为Utf8，修复后端解密后乱码的问题...\r\n\tiv = CryptoJS.enc.Utf8.parse(iv);\r\n\tconst encrypted = CryptoJS.AES.encrypt(data, aesKey, {\r\n\t\tiv: iv\r\n\t});\r\n\treturn encrypted.toString();\r\n}\r\n\r\n/**\r\n * AES 解密\r\n * mode: CBC (the default)\r\n * @param data 待解密数据\r\n * @param aesKey 解密 key\r\n * @param iv 向量\r\n * @return {String} 返回解密字符串\r\n */\r\nfunction decryptAES(data, aesKey, iv) {\r\n\t// data = CryptoJS.enc.Utf8.parse(data);\r\n\taesKey = CryptoJS.enc.Base64.parse(aesKey);\r\n\tiv = CryptoJS.enc.Utf8.parse(iv);\r\n\tvar decrypt = CryptoJS.AES.decrypt(data, aesKey, {\r\n\t\tiv: iv\r\n\t});\r\n\treturn CryptoJS.enc.Utf8.stringify(decrypt).toString();\r\n}\r\n\r\nexport default {\r\n\tparseToString,\r\n\tcreateAesIv,\r\n\tcreateAesKey,\r\n\tencryptAES,\r\n\tdecryptAES\r\n}\r\n"]}]}