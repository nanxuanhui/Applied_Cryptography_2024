{"remainingRequest":"/Users/nanxuan/Desktop/vue-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nanxuan/Desktop/vue-frontend/src/components/Encrypt.vue?vue&type=style&index=0&id=aa42ac36&scoped=true&lang=css&","dependencies":[{"path":"/Users/nanxuan/Desktop/vue-frontend/src/components/Encrypt.vue","mtime":1710256670000},{"path":"/Users/nanxuan/Desktop/vue-frontend/node_modules/css-loader/dist/cjs.js","mtime":1712020702335},{"path":"/Users/nanxuan/Desktop/vue-frontend/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1712020702746},{"path":"/Users/nanxuan/Desktop/vue-frontend/node_modules/postcss-loader/src/index.js","mtime":1712020702439},{"path":"/Users/nanxuan/Desktop/vue-frontend/node_modules/cache-loader/dist/cjs.js","mtime":1712020702053},{"path":"/Users/nanxuan/Desktop/vue-frontend/node_modules/vue-loader/lib/index.js","mtime":1712020702552}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLnRleHQtY2VudGVyIHsKICB0ZXh0LWFsaWduOiBjZW50ZXI7Cn0KLm1hcmdpbiB7CiAgbWFyZ2luOiAxNXB4Owp9Ci5wYWRkaW5nIHsKICBwYWRkaW5nOiAxNXB4Owp9Ci5idG4gewogIGRpc3BsYXk6IGJsb2NrOwogIG1hcmdpbjogMjBweCBhdXRvOwogIGZvbnQtc2l6ZTogMTZweDsKICBiYWNrZ3JvdW5kOiBjb3JuZmxvd2VyYmx1ZTsKICBjb2xvcjogI2ZmZjsKICBvdXRsaW5lOiBub25lOwogIGJvcmRlcjogbm9uZTsKICBwYWRkaW5nOiA0cHggMTBweDsKICBib3JkZXItcmFkaXVzOiAxMHB4Owp9Ci5mbGV4IHsKICBkaXNwbGF5OiBmbGV4OwogIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjsKICBhbGlnbi1pdGVtczogY2VudGVyOwogIHBhZGRpbmc6IDRweCAxMnB4Owp9Ci5mbGV4IC5rZXkgewogIGZvbnQtd2VpZ2h0OiBib2xkOwogIGZvbnQtc2l6ZTogMTRweDsKICBtaW4td2lkdGg6IDVlbTsKICB0ZXh0LWFsaWduOiBsZWZ0Owp9Ci5mbGV4IC52YWwgewogIGZsZXg6IDE7CiAgZmxleC1ncm93OiAxOwogIHdoaXRlLXNwYWNlOiBub3dyYXA7CiAgb3ZlcmZsb3c6IGhpZGRlbjsKICB0ZXh0LW92ZXJmbG93OiBlbGxpcHNpczsKICBjb2xvcjogI2YwMDsKICBmb250LXNpemU6IDEycHg7Cn0KLmZsZXggLnZhbCBpbnB1dCB7CiAgd2lkdGg6IDEwMCU7CiAgZm9udC1zaXplOiAxNHB4Owp9Cgo="},{"version":3,"sources":["Encrypt.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Encrypt.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"hello\">\n    <h1>{{ msg }}</h1>\n   \n    <ul>\n      <li>Enter data to encrypt:</li>\n      <li class=\"flex\">\n        <div class=\"key\">Base64:</div>\n        <div class=\"val\">\n          <input type=\"text\" v-model=\"params.name\" />\n        </div>\n      </li>\n      <li class=\"flex\">\n        <div class=\"key\"> Base64:</div>\n        <div class=\"val\">\n          <input type=\"text\" v-model=\"params.idcard\" />\n        </div>\n      </li>\n      <li class=\"flex\">\n        <div class=\"key\">Base64:</div>\n        <div class=\"val\">\n          <input type=\"text\" v-model=\"params.phone\" />\n        </div>\n      </li>\n      <li class=\"flex\">\n        <div class=\"key\">Base64:</div>\n        <div class=\"val\">\n          <input type=\"text\" v-model=\"params.other\" />\n        </div>\n      </li>\n    </ul>\n    <button @click=\"encryptData\" class=\"btn\">Generate Encrypted Data</button>\n    <div v-if=\"encryptedArr.length > 0\">\n      <ul>\n        <li>Encrypted Data:</li>\n        <li v-for=\"(item, index) in encryptedArr\" :key=\"index\" class=\"flex\">\n          <div class=\"key\">{{item.key}}:</div>\n          <div class=\"val\">{{item.val}}</div>\n        </li>\n      </ul>\n    </div>\n    <button @click=\"decryptData\" class=\"btn\">Decrypt Data</button>\n    <div class=\"text-align padding\" v-show=\"decryptedStatus\">\n      <span style=\"color: green;\">Signature Verification Successful</span>\n    </div>\n    <div v-if=\"decryptedArr.length > 0\">\n      <ul>\n        <li>Decrypted Data:</li>\n        <li v-for=\"(item, index) in decryptedArr\" :key=\"index\" class=\"flex\">\n          <div class=\"key\">{{item.key}}:</div>\n          <div class=\"val\">{{item.val}}</div>\n        </li>\n      </ul>\n    </div>\n  </div>\n</template>\n\n<script>\nimport Encrypt from \"@/assets/encrypt.js\";\nimport Decrypt from \"@/assets/decrypt.js\";\nexport default {\n  name: \"HelloWorld\",\n  data() {\n    return {\n      params: {\n        name: \"base64filedata\",\n        idcard: \"base64filedata\",\n        phone: \"base64filedata\",\n        other: \"\"\n      },\n      // Encrypted Data\n      encrypted: null,\n      encryptedArr: [],\n      // Decrypted Data\n      decrypted: null,\n      decryptedArr: [],\n      decryptedStatus: false\n    };\n  },\n  props: {\n    msg: String\n  },\n  methods: {\n    // Encrypt Data, usually placed in request interceptors\n    encryptData() {\n      const encryptor = new Encrypt(this.params);\n      // data is the encrypted data\n      let data = encryptor.generateData();\n      // ======\n      this.encrypted = { ...data };\n      this.encryptedArr = this.getKeyValArr(data);\n    },\n    // Decrypt Data, usually placed in response interceptors\n    decryptData() {\n      const decryptor = new Decrypt(\n        this.encrypted.encryptedKey,\n        this.encrypted.encryptedData\n      );\n      // Check if the signature is valid\n      const ispass = decryptor.isPass(\n        {\n          clientID: '',\n          sequenceNo: this.encrypted.sequenceNo,\n          timestamp: this.encrypted.timestamp,\n          version: this.encrypted.version\n        },\n        this.encrypted.signature\n      );\n      // If the signature is valid\n      if (ispass) {\n        this.decryptedStatus = ispass;\n        // data is the decrypted data\n        try {\n          let data = JSON.parse(decryptor.decrypted).body;\n          this.decryptedArr = this.getKeyValArr(data);\n          console.log(data);\n        } catch (err) {\n          console.log(err);\n        }\n      } else {\n        alert('Signature Verification Failed')\n      }\n    },\n    /**\n     * @param {Object} obj\n     * @return {Array} [{key:val}, ...]\n     * **/\n    getKeyValArr(obj) {\n      let arr = [];\n      let keys = Object.keys(obj);\n      for (let key of keys) {\n        arr.push({\n          key: key,\n          val: obj[key]\n        });\n      }\n      return arr;\n    }\n  }\n};\n</script>\n\n\n<style scoped >\n.text-center {\n  text-align: center;\n}\n.margin {\n  margin: 15px;\n}\n.padding {\n  padding: 15px;\n}\n.btn {\n  display: block;\n  margin: 20px auto;\n  font-size: 16px;\n  background: cornflowerblue;\n  color: #fff;\n  outline: none;\n  border: none;\n  padding: 4px 10px;\n  border-radius: 10px;\n}\n.flex {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 4px 12px;\n}\n.flex .key {\n  font-weight: bold;\n  font-size: 14px;\n  min-width: 5em;\n  text-align: left;\n}\n.flex .val {\n  flex: 1;\n  flex-grow: 1;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  color: #f00;\n  font-size: 12px;\n}\n.flex .val input {\n  width: 100%;\n  font-size: 14px;\n}\n\n</style>\n"]}]}